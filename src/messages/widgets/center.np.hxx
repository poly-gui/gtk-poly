// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

#ifndef CENTER_NP_HXX
#define CENTER_NP_HXX

#include <memory>
#include <nanopack/nanopack.hxx>
#include <nanopack/reader.hxx>
#include <vector>

#include "make_widget.np.hxx"
#include "widget.np.hxx"

namespace Poly::Message {

struct Center : Widget {
  static constexpr NanoPack::TypeId TYPE_ID = 1855640887;

  std::unique_ptr<Widget> child;

  Center() = default;

  Center(std::optional<int32_t> tag, std::unique_ptr<Widget> child);

  Center(std::vector<uint8_t>::const_iterator begin, int &bytes_read);

  Center(const NanoPack::Reader &reader, int &bytes_read);

  [[nodiscard]] Widget &get_child() const;

  [[nodiscard]] NanoPack::TypeId type_id() const override;

  [[nodiscard]] std::vector<uint8_t> data() const override;

  [[nodiscard]] std::vector<uint8_t> data_with_length_prefix() const override;
};

} // namespace Poly::Message

#endif
