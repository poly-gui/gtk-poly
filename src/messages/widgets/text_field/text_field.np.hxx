// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

#ifndef TEXT_FIELD_NP_HXX
#define TEXT_FIELD_NP_HXX

#include <nanopack/reader.hxx>
#include <optional>
#include <string>
#include <vector>

#include "../make_widget.np.hxx"
#include "../widget.np.hxx"

namespace Poly::Message {

struct TextField : Widget {
  static constexpr int32_t TYPE_ID = 105;

  std::optional<std::string> placeholder;
  std::string value;
  int32_t on_value_changed;

  TextField() = default;

  TextField(std::optional<int32_t> tag, std::optional<std::string> placeholder,
            std::string value, int32_t on_value_changed);

  TextField(std::vector<uint8_t>::const_iterator begin, int &bytes_read);

  TextField(const NanoPack::Reader &reader, int &bytes_read);

  [[nodiscard]] int32_t type_id() const override;

  [[nodiscard]] std::vector<uint8_t> data() const override;

  [[nodiscard]] std::vector<uint8_t> data_with_length_prefix() const override;
};

} // namespace Poly::Message

#endif
