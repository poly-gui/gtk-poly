// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

#ifndef UPDATE_WIDGETS_NP_HXX
#define UPDATE_WIDGETS_NP_HXX

#include <nanopack/message.hxx>
#include <nanopack/reader.hxx>
#include <vector>

#include "update_widget.np.hxx"

namespace Poly::Message {

struct UpdateWidgets : NanoPack::Message {
  static constexpr int32_t TYPE_ID = 4;

  std::vector<UpdateWidget> updates;

  UpdateWidgets() = default;

  explicit UpdateWidgets(std::vector<UpdateWidget> updates);

  UpdateWidgets(std::vector<uint8_t>::const_iterator begin, int &bytes_read);

  UpdateWidgets(const NanoPack::Reader &reader, int &bytes_read);

  [[nodiscard]] int32_t type_id() const override;

  [[nodiscard]] std::vector<uint8_t> data() const override;
};

} // namespace Poly::Message

#endif
