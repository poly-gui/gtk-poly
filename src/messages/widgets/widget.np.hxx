// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

#ifndef WIDGET_NP_HXX
#define WIDGET_NP_HXX

#include <nanopack/message.hxx>
#include <nanopack/nanopack.hxx>
#include <nanopack/reader.hxx>
#include <optional>
#include <vector>

namespace Poly::Message {

struct Widget : NanoPack::Message {
  static constexpr NanoPack::TypeId TYPE_ID = 1676374721;

  std::optional<int32_t> tag;

  Widget() = default;

  explicit Widget(std::optional<int32_t> tag);

  Widget(std::vector<uint8_t>::const_iterator begin, int &bytes_read);

  Widget(const NanoPack::Reader &reader, int &bytes_read);

  size_t write_to(std::vector<uint8_t> &buf, int offset) const override;

  [[nodiscard]] NanoPack::TypeId type_id() const override;

  [[nodiscard]] int header_size() const override;

  [[nodiscard]] std::vector<uint8_t> data() const override;
};

} // namespace Poly::Message

#endif
